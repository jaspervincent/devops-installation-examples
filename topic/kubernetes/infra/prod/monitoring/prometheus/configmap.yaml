apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yaml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 15s
      external_labels:
        prom_cluster: prod-eks

    #remote_write:
    #- url: http://thanos-receive-cluster-nlb-xxx:10908/api/v1/receive
    alerting:
      alertmanagers:
      - follow_redirects: true
        scheme: http
        timeout: 10s
        api_version: v2
        static_configs:
        - targets:
          - alertmanager:9093

    rule_files:
    - /etc/prometheus/rules/prometheus-rules/*.yaml
    - /etc/prometheus/rules/business/*.yaml

    scrape_configs:
    - job_name: prometheus
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      static_configs:
      - targets:
        - localhost:9090

    - job_name: alertmanager
      honor_timestamps: true
      scrape_interval: 30s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      static_configs:
      - targets:
        - alertmanager:9093

    - job_name: kube-state-metrics
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      static_configs:
      - targets:
        - kube-state-metrics:8080

    - job_name: kubernetes-apiservers
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      follow_redirects: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        separator: ;
        regex: default;kubernetes;https
        replacement: $1
        action: keep
      kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: ""
        follow_redirects: true

    - job_name: coredns
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      follow_redirects: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        separator: ;
        regex: kube-system;kube-dns;metrics
        replacement: $1
        action: keep
      kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: ""
        follow_redirects: true


    - job_name: kube-proxy
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      follow_redirects: true
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
      relabel_configs:
      - source_labels: [__address__]
        separator: ;
        regex: (.*):10250
        action: keep
      - source_labels: [__address__]
        separator: ;
        regex: (.*):10250
        target_label: __address__
        replacement: $1:10249
        action: replace
      - source_labels: [__address__]
        separator: ;
        regex: (.*)
        target_label: address
        replacement: $1
        action: replace

    - job_name: kubelet
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
      follow_redirects: true
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
      relabel_configs:
      - source_labels: [job]
        separator: ;
        regex: (.*)
        target_label: __tmp_prometheus_job_name
        replacement: $1
        action: replace
      - separator: ;
        regex: (.*)
        target_label: job
        replacement: kubelet
        action: replace
      - source_labels: [__address__]
        separator: ;
        regex: (.*):10250
        action: keep
      - source_labels: [__address__]
        separator: ;
        regex: (.*)
        target_label: address
        replacement: $1
        action: replace
      - source_labels: [__metrics_path__]
        separator: ;
        regex: (.*)
        target_label: metrics_path
        replacement: $1
        action: replace

    - job_name: kubelet-cadvisor
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics/cadvisor
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      follow_redirects: true
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
      relabel_configs:
      - source_labels: [job]
        separator: ;
        regex: (.*)
        target_label: __tmp_prometheus_job_name
        replacement: $1
        action: replace
      - separator: ;
        regex: (.*)
        target_label: job
        replacement: kubelet
        action: replace
      - source_labels: [__address__]
        separator: ;
        regex: (.*):10250
        action: keep
      - source_labels: [__address__]
        separator: ;
        regex: (.*)
        target_label: address
        replacement: $1
        action: replace
      - source_labels: [__metrics_path__]
        separator: ;
        regex: (.*)
        target_label: metrics_path
        replacement: $1
        action: replace
      metric_relabel_configs:
      - source_labels: [__name__]
        separator: ;
        regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
        replacement: $1
        action: drop
      - source_labels: [__name__]
        separator: ;
        regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
        replacement: $1
        action: drop
      - source_labels: [__name__]
        separator: ;
        regex: container_memory_(mapped_file|swap)
        replacement: $1
        action: drop
      - source_labels: [__name__]
        separator: ;
        regex: container_(file_descriptors|tasks_state|threads_max)
        replacement: $1
        action: drop
      - source_labels: [__name__]
        separator: ;
        regex: container_spec.*
        replacement: $1
        action: drop
      - source_labels: [id, pod]
        separator: ;
        regex: .+;
        replacement: $1
        action: drop

    - job_name: kubelet-probes
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics/probes
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      follow_redirects: true
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
      relabel_configs:
      - source_labels: [job]
        separator: ;
        regex: (.*)
        target_label: __tmp_prometheus_job_name
        replacement: $1
        action: replace
      - separator: ;
        regex: (.*)
        target_label: job
        replacement: kubelet
        action: replace
      - source_labels: [__address__]
        separator: ;
        regex: (.*):10250
        action: keep
      - source_labels: [__address__]
        separator: ;
        regex: (.*)
        target_label: address
        replacement: $1
        action: replace
      - source_labels: [__metrics_path__]
        separator: ;
        regex: (.*)
        target_label: metrics_path
        replacement: $1
        action: replace

    #Dynamic discovery

    - job_name: kubernetes-service-endpoints
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: ""
        follow_redirects: true
        namespaces:
          names:
          - base
          - cert-manager
          - default
          - kube-node-lease
          - kube-public
          - kube-system
          - monitoring
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        separator: ;
        regex: "node-exporter|kube-dns"
        replacement: $1
        action: drop
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        separator: ;
        regex: "true"
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        separator: ;
        regex: (https?)
        target_label: __scheme__
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        separator: ;
        regex: ([^:]+)(?::\d+);(\d+)
        target_label: __address__
        replacement: $1:$2
        action: replace
      - separator: ;
        regex: __meta_kubernetes_service_label_(.+)
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: kubernetes_namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_service_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_name
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_controller_kind]
        separator: ;
        regex: (.*)
        target_label: controller_kind
        replacement: $1
        action: replace

    - job_name: kubernetes-pods
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      kubernetes_sd_configs:
      - role: pod
        kubeconfig_file: ""
        follow_redirects: true
        namespaces:
          names:
          - default
          - base
          - cert-manager
          - kube-node-lease
          - kube-public
          - kube-system
          - monitoring
          - slots-prod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_name]
        regex: "filebeat.*|skywalking-sidecar"
        action: drop
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        separator: ;
        regex: "true"
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        separator: ;
        regex: ([^:]+)(?::\d+)?;(\d+)
        target_label: __address__
        replacement: $1:$2
        action: replace
      - separator: ;
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: kubernetes_namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_pod_name
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_container_name]
        separator: ;
        regex: (.*)
        target_label: container_name
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_node_name]
        separator: ;
        regex: (.*)
        target_label: node_name
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_ip]
        separator: ;
        regex: (.*)
        target_label: pod_ip
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_label_app]
        separator: ;
        regex: (.*)
        target_label: pod_label
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_controller_kind]
        separator: ;
        regex: (.*)
        target_label: controller_kind
        replacement: $1
        action: replace

    - job_name: kubernetes-pods-business
      scrape_interval: 15s
      scrape_timeout: 10s
      kubernetes_sd_configs:
      - role: pod
        kubeconfig_file: ""
        follow_redirects: true
        namespaces:
          names:
          - default
          - base
          - cert-manager
          - kube-node-lease
          - kube-public
          - kube-system
          - monitoring
          - slots-prod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_name]
        regex: "filebeat.*"
        action: drop
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrapejvm]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
        action: drop
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: replace
        regex: (https?)
        target_label: __scheme__
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_pathjvm]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_portjvm]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
        replacement: __param_$1
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        target_label: kubernetes_namespace
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_pod_name
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_label_app]
        separator: ;
        regex: (.*)
        target_label: pod_label
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_phase]
        regex: Pending|Succeeded|Failed|Completed
        action: drop

    #Addon
    - job_name: node-exporter
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      follow_redirects: true
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
      relabel_configs:
      - source_labels: [__address__]
        separator: ;
        regex: (.*):10250
        target_label: __address__
        replacement: $1:9100
        action: replace
      - source_labels: [__meta_kubernetes_node_label_eks_amazonaws_com_nodegroup]
        separator: ;
        regex: (.*)
        target_label: business
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_node_label_eks_amazonaws_com_nodegroup]
        separator: ;
        regex: (.*)
        target_label: nodegroup
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_node_label_beta_kubernetes_io_instance_type]
        separator: ;
        regex: (.*)
        target_label: instance_type
        replacement: $1
        action: replace

    - job_name: blackbox-exporter
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: https
      follow_redirects: true
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      static_configs:
      - targets:
        - blackbox-exporter:9115

    #Custom
    - job_name: blackbox-tcp
      scrape_interval: 10s
      scrape_timeout: 5s
      metrics_path: /probe
      params:
        modelue: [tcp_connect]
      static_configs:
      - targets:
          - kube-dns.kube-system:53
        labels:
          product_line: public
          severity: info
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:19115

    - job_name: domain-certificate
      scrape_interval: 10s
      scrape_timeout: 5s
      metrics_path: /probe
      params:
        modelue: [http_2xx]
      static_configs:
      - targets:
          - https://baidu.com
        labels:
          product_line: public
          severity: info
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:19115

    - job_name: domain-url
      scrape_interval: 10s
      scrape_timeout: 5s
      metrics_path: /probe
      params:
        modelue: [http_2xx]
      static_configs:
      - targets:
          - https://baidu.com
        labels:
          product_line: public
          severity: info
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:19115

    ##DB
    - job_name: redis-exporter-targets
      static_configs:
      - targets:
        - redis://redis.afs1.cache.amazonaws.com:6379
        labels:
          dbtype: "db-redis"
      metrics_path: /scrape
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: redis-exporter:9121


    ##Business
    - job_name: slots-game-server
      honor_timestamps: true
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      static_configs:
      - targets:
        - slots-game-server.slots-prod:13000
